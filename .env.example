# Application name (Default: "TF-IDF Analyzer")
APP_NAME=TF-IDF Analyzer

# Application version (Set automatically from version.py)
APP_VERSION=0.1.0

# Host to bind the application (Default: "0.0.0.0")
APP_HOST=0.0.0.0

# Port to bind the application (Default: 8000)
APP_PORT=8000

# Debug mode (Default: False)
# Set to True for development, False for production
DEBUG=False


# Database connection URL (Required! No default value)
# SQLite example: sqlite:///./data/tf_idf.db
# PostgreSQL example: postgresql://user:password@localhost:5432/dbname
DATABASE_URL=sqlite:///./data/tf_idf.db


# Allowed CORS origins (Default: ["*"])
# Can be set as JSON array: ["http://localhost:3000", "https://example.com"]
# Or as comma-separated string: http://localhost:3000,https://example.com
CORS_ORIGINS=["*"]


# Data directory for application files (Default: "data")
DATA_DIR=data

# Upload directory for user files (Default: "data/files")
UPLOAD_DIR=data/files

# Maximum file size in bytes (Default: 1048576 = 1MB)
MAX_FILE_SIZE=1048576

# Maximum content size for database storage (Default: 50000 symbols)
MAX_DB_CONTENT_SYMBOLS=50000

# Allowed file MIME types (Default: ["text/plain"])
# Can be set as JSON array or comma-separated string
ALLOWED_FILE_TYPES=["text/plain"]

# Allowed file extensions (Default: [".txt"])
ALLOWED_EXTENSIONS=[".txt"]

# Number of top words to return in analysis (Default: 50)
TOP_WORDS_COUNT=50

# Secret key for JWT tokens (Required! No default value)
# Generate a secure key for production using:
# python -c 'import secrets; print(secrets.token_hex(32))'
SECRET_KEY=your-secret-key-here

# Algorithm for JWT token encoding (Required! No default value)
ALGORITHM=HS256

# JWT token expiration time in minutes (Required! No default value)
ACCESS_TOKEN_EXPIRE_MINUTES=30